<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="manage">
	<select id="selectTotalRowCount" parameterType="map" resultType="int">
		<choose>
			<when test='manage == "member"'>
				SELECT
						COUNT(*)
				FROM
						MEMBER M 
						   	JOIN LIKE_MEMBER L
						   	ON M.ID = L.FAVORITE_ID
				WHERE
						L.MEMBER_ID = #{id}
			</when>
			<when test='manage == "post"'>
				SELECT
						COUNT(*)
				FROM
						POST P 
							 LEFT JOIN LIKE_POST L
							 ON P.POST_ID = L.POST_ID
				WHERE
						L.MEMBER_ID = #{id} 
			</when>
			<otherwise>
				SELECT
						COUNT(*)
				FROM 
						REPLY R
							  JOIN POST P
							  ON R.POST_ID = P.POST_ID
				WHERE
						R.MEMBER_ID = #{id} AND R.CONTENT != ''
				ORDER BY
						R.REG_DATE DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="selectManageList" parameterType="map" resultType="map">
		<choose>
			<when test='manage == "member"'>
				SELECT
						L.FAVORITE_ID AS id,
						M.BLOG_NAME   AS blogName,
						M.NICKNAME 	  AS nickname
				FROM
						MEMBER M 
							   JOIN LIKE_MEMBER L
							   ON M.ID = L.FAVORITE_ID
				WHERE
						L.MEMBER_ID = #{id}
				LIMIT
						#{startIndex}, #{viewRowCount}
			</when>
			<when test='manage == "post"'>
				SELECT
						P.MEMBER_ID AS id,
						P.TITLE		AS title,
						P.CONTENT 	AS content,
						P.POST_ID 	AS postId
				FROM
						POST P 
							 LEFT JOIN LIKE_POST L
							 ON P.POST_ID = L.POST_ID
				WHERE
						L.MEMBER_ID = #{id}
				LIMIT
						#{startIndex}, #{viewRowCount}						
			</when>
			<otherwise>
				SELECT
						P.MEMBER_ID AS id,
						R.POST_ID 	AS postId,
						P.TITLE 	AS title,
						R.CONTENT 	AS reply,
						R.REPLY_ID	AS replyId
				FROM 
						REPLY R
							  JOIN POST P
							  ON R.POST_ID = P.POST_ID
				WHERE
						R.MEMBER_ID = #{id} AND R.CONTENT != ''
				ORDER BY
						R.REG_DATE DESC
				LIMIT
						#{startIndex}, #{viewRowCount}
			</otherwise>
		</choose>
	</select>
	
	<insert id="insertLikePost" parameterType="LikePostDto">
		INSERT INTO
				LIKE_POST(
					MEMBER_ID,
					POST_ID
				)
		VALUES(
			#{memberId},
			#{postId}
		)	
	</insert>

	<delete id="deleteLikePost" parameterType="LikePostDto">
		DELETE FROM 
				LIKE_POST
		WHERE
				MEMBER_ID = #{memberId} AND POST_ID = #{postId}
	</delete>

	<update id="updateLikeAdd" parameterType="LikePostDto">
		UPDATE
				POST
		SET 
				LIKE_COUNT = LIKE_COUNT + 1

		WHERE
				POST_ID = #{postId}		
	</update>
	
	<update id="updateLikeCancel" parameterType="LikePostDto">
		UPDATE
				POST
		SET 
				LIKE_COUNT = LIKE_COUNT - 1

		WHERE
				POST_ID = #{postId}		
	</update>

	<insert id="insertLikeMember" parameterType="LikeMemberDto">
		INSERT INTO
					LIKE_MEMBER(
						MEMBER_ID,
						FAVORITE_ID
					)
		VALUES(
			#{memberId},
			#{favoriteId}
		)
	</insert>
	
	<delete id="deleteLikeMember" parameterType="LikeMemberDto">
		DELETE FROM
				LIKE_MEMBER
		WHERE
				MEMBER_ID = #{memberId} AND FAVORITE_ID = #{favoriteId}
	</delete>
</mapper>