CREATE DATABASE BMS;

USE BMS;

CREATE TABLE MEMBER (
    ID 			VARCHAR(20) PRIMARY KEY,
    PASSWORD 	VARCHAR(1000) NOT NULL,
    NAME 		VARCHAR(10) NOT NULL,
    TEL 		VARCHAR(20) NOT NULL,
    EMAIL 		VARCHAR(30) NOT NULL,
    BIRTH 		DATE NOT NULL,
    GENDER 		CHAR(1) NOT NULL,
    PROFILE_NAME VARCHAR(300),
    BLOG_NAME 	VARCHAR(20),
    NICKNAME 	VARCHAR(10),
    INTRO 		VARCHAR(60),
    REG_DATE	DATETIME DEFAULT CURRENT_TIMESTAMP, -- 가입일
    RECENT_LOGIN DATETIME DEFAULT CURRENT_TIMESTAMP -- 최근 접속일
);

CREATE TABLE POST (
    POST_ID			INT AUTO_INCREMENT PRIMARY KEY,
    MEMBER_ID 		VARCHAR(20) NOT NULL,
    CATEGORY_TITLE 	VARCHAR(10) NOT NULL,
    THUMBNAIL 		TEXT NULL,
    TITLE 			VARCHAR(50) NOT NULL,
    CONTENT 		TEXT NOT NULL,
    POST_PRIVATE 	CHAR(1) NOT NULL,
    REG_DATE 	 	DATETIME DEFAULT CURRENT_TIMESTAMP,
    LIKE_COUNT		INT NOT NULL,
    REPLY_COUNT		INT NOT NULL,
    FOREIGN KEY (MEMBER_ID)
        REFERENCES MEMBER (ID)
        ON DELETE CASCADE
);

CREATE TABLE CATEGORY (
    CATEGORY_ID 	INT AUTO_INCREMENT PRIMARY KEY,
    MEMBER_ID 		VARCHAR(20) NOT NULL,
    CATEGORY_TITLE 	VARCHAR(10) NOT NULL,
    FOREIGN KEY (MEMBER_ID)
        REFERENCES MEMBER (ID)
        ON DELETE CASCADE
);

CREATE TABLE REPLY (
    REPLY_ID 	 INT AUTO_INCREMENT PRIMARY KEY,
    MEMBER_ID	 VARCHAR(20) NOT NULL,
    POST_ID	 	 INT NOT NULL,
    TOP_REPLY_ID INT NULL,
    MENTION		 VARCHAR(45) NULL, -- 언급된 회원
    CONTENT 	 TEXT NOT NULL,
    REG_DATE 	 DATETIME DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (MEMBER_ID)
        REFERENCES MEMBER (ID)
        ON DELETE CASCADE,
	FOREIGN KEY (POST_ID)
        REFERENCES POST (POST_ID)
        ON DELETE CASCADE
);

CREATE TABLE LIKE_POST (
    LIKE_POST_ID INT AUTO_INCREMENT PRIMARY KEY,
	MEMBER_ID 	 VARCHAR(20) NOT NULL, -- 자기자신 ID
    POST_ID 	 INT NOT NULL, -- 좋아요 누른 게시글 ID
 	FOREIGN KEY (MEMBER_ID)
        REFERENCES MEMBER (ID)
        ON DELETE CASCADE,
	FOREIGN KEY (POST_ID)
        REFERENCES POST (POST_ID)
        ON DELETE CASCADE
);

CREATE TABLE LIKE_MEMBER (
    LIKE_MEMBER_ID 	INT AUTO_INCREMENT PRIMARY KEY,
    MEMBER_ID 		VARCHAR(20) NOT NULL, -- 자기자신 ID
	FAVORITE_ID 	VARCHAR(20) NOT NULL, -- 친구 추가한 상대방 ID
   	FOREIGN KEY (MEMBER_ID)
        REFERENCES MEMBER (ID)
        ON DELETE CASCADE,
	FOREIGN KEY (FAVORITE_ID)
        REFERENCES MEMBER (ID)
        ON DELETE CASCADE
);

CREATE TABLE NOTICE (
	NOTICE_ID INT AUTO_INCREMENT PRIMARY KEY,
    TO_ID 	  VARCHAR(20) NOT NULL, -- 알림받은 아이디
    FROM_ID	  VARCHAR(20) NOT NULL, -- 알림 보낸 아이디
    CONTENT	  VARCHAR(50) NOT NULL,
	POST_ID	  INT NOT NULL, -- 해당 게시글 ID, 알림 클릭 시 그 게시글로 이동할 수 있도록
    CATEGORY  VARCHAR(20) NOT NULL, -- 1) 좋아요 누름으로써 생긴 알림 2) 내 게시글에 누군가 단 댓글 알림 3) 내 댓글에 누군가 단 댓글 알림
    REG_DATE  DATETIME DEFAULT CURRENT_TIMESTAMP, -- 알림 보낸 시간
	FOREIGN KEY (TO_ID)
        REFERENCES MEMBER (ID)
        ON DELETE CASCADE,
	FOREIGN KEY (FROM_ID)
        REFERENCES MEMBER (ID),
	FOREIGN KEY (POST_ID)
        REFERENCES POST (POST_ID)
        ON DELETE CASCADE
);

CREATE TABLE MANAGER (
	ID 		 VARCHAR(20) PRIMARY KEY,
    PASSWORD VARCHAR(20) NOT NULL
);

CREATE TABLE MANAGER_NOTICE (
	NOTICE_ID 	INT AUTO_INCREMENT PRIMARY KEY,
    MANAGER_ID	VARCHAR(20) NOT NULL,
    TITLE	  	VARCHAR(50) NOT NULL,
    CONTENT	  	TEXT NOT NULL,
    REG_DATE  	DATETIME DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (MANAGER_ID)
        REFERENCES MANAGER (ID)
        ON DELETE CASCADE
);